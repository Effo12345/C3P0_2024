#include <autonomous.hpp>
#include <FEHRCS.h>

void fuelLever(int leverNum) {
     if(leverNum == 0) {
        // Route for first lever
        chassis->followNewPath({
            {11.58859813084112, -29.896364380693885},
            {10.261634262105131, -28.491574541881096},
            {8.933236580840848, -27.101390123192584},
            {7.603682962508183, -25.74266518802335},
            {6.272413776919699, -24.437214565806986},
            {4.938208958628012, -23.21515130206926},
            {3.5998225867650437, -22.119533258048374},
            {2.254983950728121, -21.21312642690189},
            {0.8231482115679349, -20.500736152316236},
            {-0.6130321137903445, -19.931565064274324},
            {-2.0520079185789664, -19.461414449085442},
            {-3.408411214953271, -19.044842184432202}
        },{
            77.68322997886798,
        73.59557132718669,
        69.28928024748056,
        64.75091155133218,
        59.96691053287555,
        54.927739827728004,
        49.634378972869186,
        44.09764817607752,
        37.85283714241815,
        30.634693364059213,
        21.30862738509119,
        0
        }, true);
    }
    else if(leverNum == 1) {
        // Route for second lever
        chassis->followNewPath({
            {11.673808411214953, -29.81224405359108},
            {10.330908855125665, -28.421873008330362},
            {8.987387501909703, -27.04545108187962},
            {7.644305309514623, -25.699128297272775},
            {6.302199791804761, -24.40380649533708},
            {4.961478232012672, -23.188133606951737},
            {3.6229185407864826, -22.093348330531565},
            {2.2877046566224477, -21.17954455943328},
            {0.9574363640975383, -20.535015692365185},
            {-0.5294433985151713, -20.10989128113538},
            {-2.092993129311505, -19.82862449676165},
            {-3.6652617646870604, -19.638070068482538},
            {-5.1795205146731575, -19.499278752159288},
            {-6.5611915887850465, -19.381323492843414}
        },{
            83.68467540599035,
            79.90346105326233,
            75.9543623310086,
            71.83677217434379,
            67.55476502329232,
            63.12296422399705,
            58.57601402194062,
            53.97590548740362,
            49.400193735523764,
            44.10795350320077,
            37.90968972717606,
            30.501425192404273,
            21.06520876788353,
            0
        }, true);
    }
    else {
        // Route for third lever
        chassis->followNewPath({
            {11.247757009345793, -29.55988307228267},
            {9.964717650315574, -28.115501151352188},
            {8.679481300543516, -26.686060130264902},
            {7.391666998385875, -25.28874967702106},
            {6.099417643931064, -23.945788210385693},
            {4.800229080206282, -22.687970803364117},
            {3.490435926485245, -21.559314388827644},
            {2.1649553248165434, -20.624049731617134},
            {0.8159811501566608, -19.976496983809014},
            {-0.7249768235625066, -19.56622274730489},
            {-2.3865667119121925, -19.31503607970419},
            {-4.116338689753883, -19.16957054340905},
            {-5.8724209033719035, -19.09293464793447},
            {-7.617093990342953, -19.05896740167948},
            {-9.31073095828102, -19.048230431957734},
            {-10.906915887850467, -19.044842184432202}
        }, {
            88.93115875594637,
            85.38458371486506,
            81.70311942925358,
            77.89300602883557,
            73.96573426927631,
            69.9447618995018,
            65.87102052620243,
            61.80516860613887,
            57.80179635350825,
            57.156524554144184,
            52.240963366612284,
            46.622284329363154,
            40.139210711216414,
            32.44618696767433,
            22.600449735059794,
            0
        }, true);
    }

    if(leverNum == 0 || leverNum == 1) {
        // Align with lever
        chassis->turn(89.0f);

        float flipDownTime = TimeNow();
        // Actuate lever, then move arm up
        fuelArm.SetDegree(100);
        Sleep(1000);
        fuelArm.SetDegree(0);

        // Disengage from lever
        chassis->driveFor(-15.0f, 0.5f);

        // Put arm under lever
        fuelArm.SetDegree(150);
        Sleep(500);

        // Realign with lever
        chassis->driveFor(15.0f, 0.5f);

        // Wait until 5 seconds elapsed, then unflip lever
        Sleep(5.25f - (TimeNow() - flipDownTime));
        fuelArm.SetDegree(85);
        Sleep(300);

        // Get arm out of the way
        fuelArm.SetDegree(155);
        Sleep(100);

        // Line up with wall
        chassis->followNewPath({
            {-4.601355140186915, -18.203638913404163},
            {-6.542553139027724, -18.21816432774457},
            {-8.475465843640093, -18.23262029872955},
            {-10.388685199720005, -18.246928986045525},
            {-12.268982034528465, -18.260991450647396},
            {-14.097871260956413, -18.274669445276384},
            {-15.84911214953271, -18.28775924050697}
        }, {
            59.994857291017624,
            54.57272351347889,
            48.576051591192716,
            41.80174006511954,
            33.847801378972115,
            23.673038221726866,
            0
        }, true);
    }
    else { // Lever 3 (same as above)
        chassis->turn(89.0f);

        float flipDownTime = TimeNow();
        fuelArm.SetDegree(100);
        Sleep(1000);
        fuelArm.SetDegree(0);

        float startLeverFlip = TimeNow();

        chassis->driveFor(15.0f, 0.6f);

        fuelArm.SetDegree(150);
        Sleep(500);

        chassis->driveFor(-25.0f, 0.5f);

        Sleep(5.25f - (TimeNow() - flipDownTime));
        fuelArm.SetDegree(75);

        // Get arm out of the way of the levers
        Sleep(500);
        fuelArm.SetDegree(100);
        Sleep(50);
    }

    // Hard reset against wall
    chassis->getOdomModel()->setPos({{-10.65, FLT_MAX}, 90.0f});
}

void ramp() {
    // Drive to ramp
    chassis->followNewPath({
        {-15.678691588785046, -18.876601530226594},
        {-13.698875021554342, -18.91246736276308},
        {-11.723332954377499, -18.94674302094277},
        {-9.75483576731978, -18.977598455301877},
        {-7.798146692646822, -19.002639117755947},
        {-5.859893660084502, -19.018550259096155},
        {-3.949625325465347, -19.020607044902118},
        {-2.081347131721959, -19.00194331974281},
        {-0.27543279638341617, -18.952449431855445},
        {1.4377451762396969, -18.85722485961777},
        {3.0136764265968363, -18.69417877902899},
        {4.660870975296372, -18.437013059988615},
        {6.333978499053926, -18.123206567510323},
        {7.991881695821776, -17.78136826702066},
        {9.590901805421051, -17.435768419154662},
        {11.07733644859813, -17.110074661067713}
    }, {
        92.82264147666051,
        89.34426405747072,
        85.73289284981347,
        81.97641391135608,
        78.06369618999877,
        73.98431451610477,
        69.73085811183812,
        65.3032443318028,
        60.71576517337116,
        56.01197170927781,
        51.28694917149402,
        45.79152365297836,
        39.397125084066744,
        31.78749112782635,
        22.066792125559836,
        0
    });

    // Get servo out of the way, and face up the ramp
    fuelArm.SetDegree(0.0f);

    chassis->turn(0.0f);
    // gui->pause();

    // Facing exactly straight up the ramp
    chassis->getOdomModel()->setPos({{FLT_MAX, FLT_MAX}, 0.0f});

    passportArm.SetDegree(60.0f);

    // Drive to the top of the ramp
    chassis->resetSettled();
    chassis->drive(80.0f, 80.0f);
    while(chassis->getOdomModel()->getPos().p.y < 6.0f) {
        chassis->getOdomModel()->step();
        gui->setPos(chassis->getOdomModel()->getPos());
        Sleep(10);
    }
    chassis->drive(0.0f, 0.0f);
    chassis->awaitSettled();

    // gui->pause();
    chassis->getOdomModel()->setPos({{FLT_MAX, 7.45f}, 0.0f});

    // Path away from the wall
    chassis->followNewPath({
        {11.58859813084112, 8.210143796876213},
        {9.908909095269006, 8.328215052310563},
        {8.276037247860241, 8.426572588816413},
        {6.6575734911592575, 8.493105880490905},
        {5.1126168224299064, 8.546625105287427}
 
    }, {
        45.55569549404768,
        39.198145285872094,
        31.828108896697696,
        22.241463096664337,
        0
    });

    chassis->turn(-90.0f);

    // Drive back into the wall for hard reset
    chassis->followNewPath({
        {5.623878504672897, 11.49083655388556},
        {7.321734497071307, 11.452314846268939},
        {8.970933437001593, 11.413286566152252},
        {10.518668896577896, 11.373143379496334},
        {12.085253858296184, 11.327769185853722},
        {13.603161703200582, 11.281494073011615},
        {14.997009345794392, 11.238475572577148}
    }, {
        77.46617692247663,
        70.10064970184126,
        62.11536247314622,
        53.5484307760901,
        43.178693876686836,
        29.874525092666733,
        0
    }, true);

    // Hard reset at top of ramp
    chassis->getOdomModel()->setPos({{10.75f, FLT_MAX}, -90.0f});
}

void light() {
    // Drive to light
    chassis->followNewPath({
        {15.082219626168223, 10.565512955754718},
        {13.189359112769221, 10.63224639500929},
        {11.311705145567851, 10.725052116954085},
        {9.468831066560712, 10.874260694521448},
        {7.685027952064008, 11.118719622630827},
        {5.9935574834547545, 11.512424721235734},
        {4.442114002986909, 12.132629661205382},
        {3.051926745547541, 13.089303188065214},
        {1.771459189578323, 14.267097555014626},
        {0.5663731564045801, 15.585266980166635},
        {-0.5858608741825532, 16.984882469899294},
        {-1.6995405119022775, 18.41969315007208},
        {-2.7829646633763003, 19.849004053789088},
        {-3.839719745452008, 21.231223726318728},
        {-4.869214819859706, 22.517482192349785},
        {-5.967290700057634, 23.80478339420836},
        {-7.085657535166577, 25.07226780914759},
        {-8.18018691588785, 26.296014123979017}

    }, {
        79.24432290543687,
        75.32311087406752,
        71.21789298439758,
        66.9353331361619,
        62.48348991233368,
        57.86576877042477,
        53.04512798390488,
        74.53339853890364,
        70.70008038409894,
        66.5355599731656,
        62.0230299044117,
        57.14576645311728,
        51.88169351161282,
        46.20542343202363,
        40.09656931886647,
        32.65409692972953,
        22.921172067483063,
        0
    });

    // Sample light color using cds cell
    cds->sampleLight();
}

void luggage() {
    // Drive to luggage
    chassis->followNewPath({
        {-8.265397196261683, 26.127773469773413},
        {-7.032008290574044, 25.091184411309584},
        {-5.8863854849420845, 24.03266525521863},
        {-4.927795347882207, 22.92686355962647},
        {-4.285620198363746, 21.741015107680642},
        {-3.886853419311549, 20.30381823883216},
        {-3.6508312801552907, 18.702527836757522},
        {-3.522325218761153, 16.998859360381932},
        {-3.462846247341467, 15.23844225358286},
        {-3.444709690483237, 13.458204481548165},
        {-3.446582996832674, 11.691837751810485},
        {-3.4545826065813765, 9.904318890994388},
        {-3.4661751134822647, 8.128802964188932},
        {-3.479426400054433, 6.400348760945303},
        {-3.4936214953271025, 4.7612103856612595}
    }, {
        64.5554641684543,
        58.534473241796064,
        52.04599546957454,
        45.11759764033342,
        44.01303476530459,
        84.6189490006821,
        80.09878019068867,
        75.03266515885537,
        69.42367675182015,
        63.2510476007079,
        56.463845688742616,
        48.64050739818833,
        39.35916952176443,
        27.459641771223563,
        0
    }, true);
}

void button() {
    highButton.SetDegree(180.0f);

    if(cds->getColor() == RED) {
        // Press red button (primary points only)
        chassis->followNewPath({
            {-3.749252336448598, 2.7423225351939693},
            {-2.8285117423109103, 4.298271342225558},
            {-1.9191613022755363, 5.825525641775824},
            {-1.032140030961459, 7.290891577531487},
            {-0.18291388078984938, 8.651372686775852},
            {0.6071315784387331, 9.84796234448363},
            {1.4518502396016808, 11.050578755571106},
            {2.2223825299038786, 12.27551159962376},
            {2.778219669192514, 13.54235645473094},
            {3.1690278934067977, 15.02432394988846},
            {3.437555802248474, 16.641138654588634},
            {3.6073604933677337, 18.333518023047397},
            {3.6883851025721737, 20.082978032966626},
            {3.7112269340719126, 21.850905851099814},
            {3.697386288223425, 23.601498334549625},
            {3.6627292015030113, 25.296440335567315},
            {3.6198017616850295, 26.88862230715737},
            {3.5788317757009342, 28.314901974446308}
        }, {
            89.70355924724832,
            86.41862948008287,
            83.06254831316122,
            79.69474059807018,
            76.4070920379758,
            73.34305412659762,
            70.06368123977312,
            66.67712017248078,
            65.37793745613456,
            65.29887366791023,
            61.15124695971327,
            56.52605115930263,
            51.329983103820915,
            45.486075303881115,
            38.84296517611153,
            31.085062841427074,
            21.368148100213578,
            0
        });
    }
    else {
        // Press blue button (default)
        chassis->followNewPath({
            {-3.0675700934579435, 0.891675338932287},
            {-3.091694027589364, 2.8015868503728854},
            {-3.1054396347834574, 4.697859792135125},
            {-3.0946971768349143, 6.564600592805611},
            {-3.0425205202817778, 8.381377021836236},
            {-2.9254743099693425, 10.12006866144757},
            {-2.7100232296402407, 11.740191882866965},
            {-2.3591289743495376, 13.425527586040582},
            {-1.9468121307413822, 15.1546999119488},
            {-1.5374893784399923, 16.913226146769478},
            {-1.1960091592351123, 18.69124334208409},
            {-0.9881595254150563, 20.503368343614685},
            {-0.8688470246274554, 22.320510615404196},
            {-0.8068131249255397, 24.114380259546834},
            {-0.7797465702544012, 25.853054738170695},
            {-0.7707848062601355, 27.496061414081172},
            {-0.7668925233644859, 28.98786459126874}
        }, {
            95.1573018238276,
            91.88956227716034,
            88.52608865289316,
            85.08525973972787,
            81.595914482738,
            78.10411422955175,
            74.68098190942273,
            70.89694214197749,
            66.76472251116088,
            62.287693056743834,
            57.449045683979485,
            52.122076676480994,
            46.19494842372606,
            39.49166804142144,
            31.672521195700412,
            21.84899635136888,
            0
        });
    }

    highButton.SetDegree(0.0f);
    Sleep(1000);
}

void passport() {
    // Go to passport lever
    passportArm.SetDegree(180);

    chassis->followNewPath({
        {1.7042056074766354, 26.54837510528743},
        {1.7138533186656226, 24.75072013987888},
        {1.7493848384486137, 22.98352299149517},
        {1.8427746419084852, 21.2821941030158},
        {2.034001051127976, 19.692090436742173},
        {2.3782248595118887, 18.276441300312822},
        {2.9338867460299283, 16.869539725617276},
        {3.5924885774555477, 15.495203387834},
        {4.260514018691588, 14.18268702117528} 
    }, {
        64.092366924167,
        59.435457638085126,
        54.46977367697463,
        49.210886971526406,
        43.69452962610751,
        37.986898788787755,
        30.966984622872655,
        21.7088958380032,
        0
    }, true);

    chassis->turn(0.0f);

    chassis->followNewPath({
        {4.856985981308411, 14.603288656689298},
        {4.904900411160484, 16.455861922583583},
        {4.951236860963787, 18.285611711992114},
        {4.996329192098817, 20.066233312233454},
        {5.039308534097578, 21.763416465128785},
        {5.078970389130134, 23.329597542907365},
        {5.1126168224299064, 24.697727909025748}
    }, {
        56.84414103612772,
        51.363748684841035,
        45.30482346396909,
        38.50383669095963,
        30.647556411474053,
        20.926874870257436,
        0
    });

    chassis->turn(-2.0f);
    passportArm.SetDegree(55);
    Sleep(500);
    passportArm.SetDegree(180);

    chassis->driveFor(25.0f, 0.15f);
    fuelArm.SetDegree(40.0f);

    chassis->driveFor(-25.0f, 0.5f);
    fuelArm.SetDegree(0.0f);
    passportArm.SetDegree(60.0f);
}

void finalButton() {
    // Path to final button
    chassis->followNewPath({
        {4.77177570093458, 19.902869264165933},
        {4.605804537094933, 18.090331885673393},
        {4.470162329541539, 16.301761979337375},
        {4.402062515505673, 14.564853501593923},
        {4.448240058961531, 12.915306693974033},
        {4.673289006641467, 11.402482606629588},
        {5.169720876103829, 10.097105579779058},
        {6.047284257917889, 8.968067046189303},
        {7.14760688439673, 7.940247877446536},
        {8.347090141279752, 6.954318272261914},
        {9.537632607642976, 5.957543958963645},
        {10.609714681865423, 4.895384655211922},
        {11.43539165263623, 3.7032801615731032},
        {11.97100365956049, 2.2541535380155535},
        {12.309816398928245, 0.6337740968332168},
        {12.514413503773525, -1.0986222744011496},
        {12.626278136075248, -2.9014975650972157},
        {12.672585158487172, -4.74426752301267},
        {12.670202831064984, -6.602483706262287},
        {12.628386418770942, -8.454159095579193},
        {12.550261134371707, -10.276319388028513},
        {12.433288531736267, -12.0413699529494},
        {12.268859899904442, -13.712783152390793},
        {12.04097378091983, -15.239423667617393},
        {11.723707042940429, -16.54756406246667},
        {11.26779176146609, -17.833556457883173},
        {10.774950549254687, -19.101178379850033},
        {10.274447294171138, -20.25474649715919},
        {9.713971962616823, -21.400211343310705}
    }, {
        71.3465795896299,
        66.04760608500797,
        60.37221115941773,
        54.30936097717391,
        47.84798300633658,
        40.959013525882334,
        33.45155002173636,
        64.96918542565447,
        64.5027825686404,
        59.49400549807163,
        54.02265518895007,
        48.11222431904524,
        41.650175089142266,
        75.49252589572949,
        94.91792293911847,
        91.16818343948485,
        87.11544464526496,
        82.77535876811092,
        78.15672034468282,
        73.26400163282634,
        68.1034521897924,
        62.69378982070637,
        57.085187157809905,
        51.39354456906134,
        45.8570675852253,
        39.46015252328147,
        31.82892445779658,
        22.58525375650578,
        0
    }, true);

    // In case the we miss, turn then back up into final button
    chassis->turn(-45.0f);
    chassis->driveFor(-50.0f, 2.0f);
}

/**
 * Final route for the in-class performance test
*/
void showcase() {
    // Fetch lever from RCS and give to GUI
    int leverNum = RCS.GetCorrectLever();
    gui->setLeverNum(leverNum);

    // Set initial states for servos and press starting button
    fuelArm.SetDegree(0.0f);
    passportArm.SetDegree(148);
    highButton.SetDegree(0.0f);

    chassis->driveFor(25.0f, 0.2f);

    
    fuelLever(leverNum);
    ramp();
    light();
    luggage();
    button();
    passport();
    finalButton();
}