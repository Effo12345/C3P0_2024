#include <autonomous.hpp>
#include <FEHRCS.h>

/**
 * Final route for the in-class performance test
*/
void showcase() {
    // Fetch lever from RCS and give to GUI
    int leverNum = RCS.GetCorrectLever();
    // int leverNum = 1;
    gui->setLeverNum(leverNum);

    // Set initial states for servos and press starting button
    fuelArm.SetDegree(0.0f);
    highButton.SetDegree(0);
    chassis->driveFor(25.0f, 0.2f);

    if(leverNum == 0) {
        // Route for first lever
        chassis->followNewPath({
            {11.58859813084112, -29.896364380693885},
        {10.319225758799796, -28.495913531001708},
        {9.053212760557711, -27.114159347759426},
        {7.796550561690725, -25.773142906253046},
        {6.55560888533167, -24.50121642030773},
        {5.339303406450261, -23.33728533377678},
        {4.160310919505794, -22.336958302722454},
        {2.8858206637855384, -21.40407081910025},
        {1.5667035124537594, -20.580016872805356},
        {0.24706100622902874, -19.923258096816916},
        {-1.0292230723448719, -19.518311320568404},
        {-2.386408136200415, -19.357909841090752},
        {-3.749252336448598, -19.297203165740612}
        },{
            78.56163126224843,
        74.61293601651482,
        70.47976142856373,
        66.17627494809147,
        61.73053527355198,
        57.20089653298077,
        52.69880891598955,
        47.6628400306965,
        42.11926072763798,
        36.08794701680842,
        29.561198684867826,
        20.893601642568207,
        0
        }, true);
    }
    else if(leverNum == 1) {
        // Route for second lever (primary points only)
        chassis->followNewPath({
            {11.58859813084112, -29.896364380693885},
        {10.319225758799796, -28.495913531001708},
        {9.053212760557711, -27.114159347759426},
        {7.796550561690725, -25.773142906253046},
        {6.55560888533167, -24.50121642030773},
        {5.339303406450261, -23.33728533377678},
        {4.160310919505794, -22.336958302722454},
        {2.8858206637855384, -21.40407081910025},
        {1.5667035124537594, -20.580016872805356},
        {0.24706100622902874, -19.923258096816916},
        {-1.0292230723448719, -19.518311320568404},
        {-2.386408136200415, -19.357909841090752},
        {-3.749252336448598, -19.297203165740612}
        },{
            78.56163126224843,
        74.61293601651482,
        70.47976142856373,
        66.17627494809147,
        61.73053527355198,
        57.20089653298077,
        52.69880891598955,
        47.6628400306965,
        42.11926072763798,
        36.08794701680842,
        29.561198684867826,
        20.893601642568207,
        0
        }, true);
    }
    else {
        // Route for third lever
        chassis->followNewPath({
            {11.07733644859813, -29.139281436768652},
        {9.720978170064692, -27.801465606455658},
        {8.363952837629277, -26.48385262667325},
        {7.007376602900148, -25.20970498752403},
        {5.651887267835452, -24.00936335962499},
        {4.297810201185758, -22.924475801419987},
        {2.9459457326430933, -22.01470438521666},
        {1.5974855860586623, -21.367105837884488},
        {0.04602663466761324, -20.88505086523872},
        {-1.6391895540171064, -20.514420286803794},
        {-3.409756572987594, -20.21845595073612},
        {-5.230512307755076, -19.972156514828033},
        {-7.074178690455905, -19.75816254112212},
        {-8.917103723562517, -19.564258292497907},
        {-10.736495327102803, -19.381323492843414}
        }, {
            89.17223938789618,
        85.68577378508735,
        82.07791763124193,
        78.36598477518992,
        74.57777480571093,
        70.75746326844833,
        66.97151176415143,
        63.29687292490198,
        59.047561904267035,
        54.17063146734721,
        48.57998308270863,
        42.0959173073244,
        34.32393027216662,
        24.189685539799672,
        0
        }, true);
    }

    if(leverNum == 0 || leverNum == 1) {
        // Align with lever
        chassis->turn(89.0f);

        // Actuate lever, then move arm up
        fuelArm.SetDegree(100);
        Sleep(1000);
        fuelArm.SetDegree(0);

        // Disengage from lever
        chassis->driveFor(-15.0f, 0.5f);

        // Put arm under lever
        fuelArm.SetDegree(150);
        Sleep(500);

        // Realign with lever
        chassis->driveFor(15.0f, 0.5f);

        // Wait until 5 seconds elapsed, then unflip lever
        Sleep(4.0f);
        fuelArm.SetDegree(85);
        Sleep(300);

        // Get arm out of the way
        fuelArm.SetDegree(155);
        Sleep(100);

        // Line up with wall
        chassis->followNewPath({
            {-6.390771028037383, -19.71780480125463},
        {-8.25805069709819, -19.682335918998913},
        {-10.106422649708065, -19.647244980400384},
        {-11.9103245346143, -19.612998296343296},
        {-13.639286252808482, -19.580174335015222},
        {-15.252640186915887, -19.549564147049022}
        }, {
            53.257010118965994,
        47.31460499355211,
        40.584310262122536,
        32.70678246359408,
        22.723691895485917,
        0
        }, true);
    }
    else { // Lever 3 (same as above)
        chassis->turn(89.0f);

        fuelArm.SetDegree(100);
        Sleep(1000);
        fuelArm.SetDegree(0);

        float startLeverFlip = TimeNow();

        chassis->driveFor(15.0f, 0.6f);

        fuelArm.SetDegree(150);
        Sleep(500);

        chassis->driveFor(-25.0f, 0.5f);

        Sleep(4.0f);
        fuelArm.SetDegree(75);
    }

    // Get arm out of the way of the levers
    Sleep(500);
    fuelArm.SetDegree(110);
    Sleep(50);


    // Hard reset against wall
    chassis->getOdomModel()->setPos({{-10.65, FLT_MAX}, 90.0f});

    // Drive to ramp
    chassis->followNewPath({
        {-15.678691588785046, -18.876601530226594},
        {-13.697635474030346, -18.912729566229626},
        {-11.720528744588849, -18.94729407964697},
        {-9.749842731787613, -18.978493487759675},
        {-7.790178013392273, -19.004007376631282},
        {-5.847794186688582, -19.020641930579412},
        {-3.931566480908584, -19.02379681799927},
        {-2.054451023747191, -19.00674672422335},
        {-0.23552131293816253, -18.95961663176463},
        {1.4969616071575087, -18.867856945112383},
        {3.1014544395640384, -18.70994611232036},
        {4.790739712509163, -18.460401506391793},
        {6.525119216763312, -18.15305441787689},
        {8.271731403489634, -17.812759144942202},
        {9.999558243302191, -17.45922449997773},
        {11.673808411214953, -17.110074661067713}
    }, {
        93.83304036132351,
        90.39134968671618,
        86.82065001488695,
        83.1091253669917,
        79.24633028140016,
        75.22230550600838,
        71.02958220850304,
        66.66708201207231,
        62.146978688322214,
        57.50717670611563,
        52.831402196253485,
        47.3784706855169,
        41.0008667264209,
        33.34135465595028,
        23.3941446415975,
        0
    });

    // Get servo out of the way, and face up the ramp
    fuelArm.SetDegree(0.0f);

    chassis->turn(0.0f);

    // Drive to the top of the ramp
    chassis->resetSettled();
    chassis->drive(80.0f, 80.0f);
    while(chassis->getOdomModel()->getPos().p.y < 6.0f) {
        chassis->getOdomModel()->step();
        gui->setPos(chassis->getOdomModel()->getPos());
        Sleep(10);
    }
    chassis->drive(0.0f, 0.0f);
    chassis->awaitSettled();

    // Hard reset at top of ramp
    chassis->getOdomModel()->setPos({{11.25f, FLT_MAX}, 0.0f});

    // Drive to light
    chassis->followNewPath({
        {11.929439252336447, 6.359496600614531},
        {10.268390374274212, 6.964039511946315},
        {8.65559728242924, 7.615787334028187},
        {7.14882124577171, 8.369311821974424},
        {5.821416420593697, 9.29512102606056},
        {4.657698385703325, 10.508421359695774},
        {3.6024659716296012, 11.913150504704992},
        {2.6175044285958062, 13.443213574185155},
        {1.6755585367632786, 15.052088069094614},
        {0.7561340309747838, 16.705430181095892},
        {-0.15778421023263078, 18.375999620416188},
        {-1.0823941837713893, 20.039101733455627},
        {-2.035550353508112, 21.668890613082368},
        {-3.0395562160056033, 23.234359054545074},
        {-4.14575947101877, 24.74209552462062},
        {-5.30466359549409, 26.20811561998024},
        {-6.475981308411215, 27.64193935762388}
    }, {
        75.06704522389676,
        71.19983206473238,
        67.17718783595866,
        63.03708790083313,
        58.786015147508756,
        80.95000325913423,
        77.39953215258899,
        73.54175254658756,
        69.36715839948916,
        64.85698756668613,
        59.975652199718965,
        54.664147601225295,
        48.826163550319144,
        42.29503538805359,
        34.50312044983127,
        24.34052764046295,
        0
    });

    // Sample light color using cds cell
    cds->sampleLight();

    // Drive to luggage
    chassis->followNewPath({
        {-8.265397196261683, 26.127773469773413},
        {-7.031989406306003, 25.090710496046768},
        {-5.886273877959856, 24.031637426184673},
        {-4.927542000807362, 22.92530055093744},
        {-4.2851814239926, 21.738687015995026},
        {-3.886206545277995, 20.300252315266356},
        {-3.6499550056783954, 18.69713151688092},
        {-3.521103749290485, 16.9907443358951},
        {-3.461060913530708, 15.226361146916691},
        {-3.4420129038920284, 13.440279196614837},
        {-3.442581899093509, 11.665295380871475},
        {-3.448654564028766, 9.865012935912693},
        {-3.45814546654422, 8.070618109009244},
        {-3.469470775441349, 6.314108359812288},
        {-3.481369594121744, 4.633578498519968},
        {-3.4936214953271025, 3.0788038436051846}
    }, {
        63.854692984789665,
        58.037751827667755,
        51.78688974086579,
        45.141379861027325,
        44.056263830077405,
        87.10774239004927,
        82.9142157975775,
        78.2420560115549,
        73.10978958103703,
        67.52126024206753,
        61.46647594926944,
        54.64429415171919,
        46.86634310195027,
        37.7302764578327,
        26.155727636768017,
        0
    }, true);

    if(cds->getColor() == RED) {
        // Press red button (primary points only)
        chassis->followNewPath({
            {-3.0675700934579435, 0.891675338932287},
            {-3.090185331820164, 2.801519738289412},
            {-3.1022135979614474, 4.69763235825681},
            {-3.0892599731092356, 6.564171667027768},
            {-3.034008417143056, 8.38077793524425},
            {-2.912565115654135, 10.119130149307976},
            {-2.69067350027059, 11.738814419932831},
            {-2.330335145207166, 13.423428892517439},
            {-1.9040769192241709, 15.151542643987932},
            {-1.4741081451520208, 16.908548251259194},
            {-1.1021098022252949, 18.684344930388974},
            {-0.8490677896825513, 20.493149449695842},
            {-0.6754909623043376, 22.305116162066735},
            {-0.554296735587385, 24.09089222264416},
            {-0.46656847388521, 25.81709753822481},
            {-0.39861745242592206, 27.44092642636544},
            {-0.3408411214953271, 28.903744264165933}
        }, {
            95.07485825390117,
            91.80433333084333,
            88.43792948483684,
            84.9938845411939,
            81.50078276986639,
            78.00480157464187,
            74.57619566283346,
            70.78374144596488,
            66.63908333656364,
            62.14446971257981,
            57.28303152390675,
            51.931607170549015,
            45.9826936167947,
            39.263790976021745,
            31.441162262473874,
            21.644091128864932,
            0
        });
    }
    else {
        // Press blue button (default)
        chassis->followNewPath({
            {-3.0675700934579435, 0.891675338932287},
            {-3.090185331820164, 2.801519738289412},
            {-3.1022135979614474, 4.69763235825681},
            {-3.0892599731092356, 6.564171667027768},
            {-3.034008417143056, 8.38077793524425},
            {-2.912565115654135, 10.119130149307976},
            {-2.69067350027059, 11.738814419932831},
            {-2.330335145207166, 13.423428892517439},
            {-1.9040769192241709, 15.151542643987932},
            {-1.4741081451520208, 16.908548251259194},
            {-1.1021098022252949, 18.684344930388974},
            {-0.8490677896825513, 20.493149449695842},
            {-0.6754909623043376, 22.305116162066735},
            {-0.554296735587385, 24.09089222264416},
            {-0.46656847388521, 25.81709753822481},
            {-0.39861745242592206, 27.44092642636544},
            {-0.3408411214953271, 28.903744264165933}
        }, {
            95.07485825390117,
            91.80433333084333,
            88.43792948483684,
            84.9938845411939,
            81.50078276986639,
            78.00480157464187,
            74.57619566283346,
            70.78374144596488,
            66.63908333656364,
            62.14446971257981,
            57.28303152390675,
            51.931607170549015,
            45.9826936167947,
            39.263790976021745,
            31.441162262473874,
            21.644091128864932,
            0
        });
    }

    // Drive into button to make sure it's pressed
    chassis->driveFor(25.0f, 0.6f);

    // Try to press the top button (NOT FUNCTIONAL)
    highButton.SetDegree(70);
    Sleep(1000);
    highButton.SetDegree(0);

    // Go to passport lever
    fuelArm.SetDegree(170);

    chassis->followNewPath({
        {1.7042056074766354, 26.54837510528743},
        {1.5960476112731834, 24.758399153417965},
        {1.5233039835000337, 22.99671777806364},
        {1.5290566336958602, 21.295710308989168},
        {1.6677942574523708, 19.697411318322864},
        {2.0147008013028773, 18.260061351831894},
        {2.6360464272288584, 16.828860835885262},
        {3.425077365580731, 15.417096117473028},
        {4.301360179382748, 14.040821944166462},
        {5.197916026042569, 12.721803412035479},
        {6.049929906542055, 11.49083655388556}
    }, {
        72.09200684935382,
        67.99573840137104,
        63.71186707895904,
        59.28639391802244,
        54.785925030832026,
        50.28259110370662,
        45.04504833700058,
        38.87828897940603,
        31.45505949263066,
        21.887466004580965,
        0
    }, true);

    chassis->turn(0.0f);

    // Move passport lever up
    chassis->driveFor(25.0f, 0.8f);
    fuelArm.SetDegree(30.0f);
    Sleep(1000);

    fuelArm.SetDegree(170);

    chassis->driveFor(15.0f, 1.7f);

    fuelArm.SetDegree(20.0f);
    chassis->driveFor(25.0f, 0.5f);

    fuelArm.SetDegree(20.0f);

    // Move passport lever down
    chassis->driveFor(-15.0f, 0.75f);
    fuelArm.SetDegree(0.0f);
    Sleep(500);

    chassis->driveFor(15.0f, 1.25f);
    
    fuelArm.SetDegree(20.0f);
    Sleep(500);

    chassis->driveFor(-15.0f, 1.0f);
    
    fuelArm.SetDegree(0.0f);

    // Path to final button
    chassis->followNewPath({
        {6.902032710280373, 16.20157487164257},
        {6.851132220938051, 14.330800044006287},
        {6.823747342727955, 12.478478456702476},
        {6.849193947375858, 10.665995419342583},
        {6.964057636621991, 8.920883968853177},
        {7.218897397387403, 7.281209369225555},
        {7.686101954773756, 5.801500838854669},
        {8.461707543792333, 4.471073531234375},
        {9.39004088300492, 3.22660766455566},
        {10.339269330386566, 2.018447546587466},
        {11.180837995416782, 0.802354977918031},
        {11.769364486899905, -0.46704296101662},
        {12.146567538093263, -1.9615326891286085},
        {12.381181403441373, -3.6024802121822415},
        {12.519692395383531, -5.334080076091214},
        {12.593658032864775, -7.114408172322897},
        {12.624432186887567, -8.909489436075578},
        {12.626721354734807, -10.687432379263695},
        {12.610787405144888, -12.413744423980681},
        {12.583977027446377, -14.04587498405432},
        {12.551971930422782, -15.526571911606526},
        {12.51057822290877, -17.062092621979122},
        {12.424717347793992, -18.58125736046535},
        {12.252358532735334, -20.010335664208704},
        {11.957363537560314, -21.47194196803598},
        {11.589935019527454, -22.897262555819037},
        {11.188983118968157, -24.211813098198803},
        {10.712211963457408, -25.558183462534416},
        {10.225233644859813, -26.868032604992948}
    }, {
        81.21705040039993,
        76.46974835442842,
        71.46056822348496,
        66.19326360876585,
        60.67942921253624,
        54.93859363775428,
        48.964919378017434,
        72.59165838052073,
        68.18003896546237,
        63.513280606540846,
        58.67180212185478,
        54.95953207183379,
        100.4985056126686,
        97.14368632980913,
        93.49889559514945,
        89.60634970623529,
        85.5053208518235,
        81.2402740469312,
        76.8728033554399,
        72.50163858075105,
        68.29400035667284,
        63.63677448944824,
        58.66006649075055,
        53.527838610182435,
        47.63190227292339,
        40.9881803498411,
        33.619869699823674,
        23.642715975833596,
        0
    }, true);

    // In case the we miss, turn then back up into final button
    chassis->turn(-45.0f);
    chassis->driveFor(-50.0f, 2.0f);
}